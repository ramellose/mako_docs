<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mako info on</title><link>https://ramellose.github.io/mako_docs/examples/</link><description>Recent content in Mako info on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://ramellose.github.io/mako_docs/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://ramellose.github.io/mako_docs/examples/qiita/intro/</link><pubDate>Wed, 21 Apr 2021 16:30:54 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/examples/qiita/intro/</guid><description>For presenting mako, we constructed a curated database of 60 data sets and 60 networks which were collected from Qiita (Gonzalez et al., 2018). We can load a dump of mako&amp;rsquo;s 60-network database into a Docker container or a local Neo4j database. The following commands carry out such a task. Keep in mind that you need to use a Neo4j version equal to the version that the database was created in, in this case 4.</description></item><item><title>Download</title><link>https://ramellose.github.io/mako_docs/examples/qiita/download/</link><pubDate>Wed, 21 Apr 2021 16:31:02 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/examples/qiita/download/</guid><description>First, download the mako.dump file from the mako releases page. This file was created by uploading 60 BIOM files and network files to the Neo4j database and then using neo4j-admin to create a dump file. Such a file is much faster to restore a complete database. Save the file to a folder named data, then navigate to the folder containing the data folder on your command line. See the screenshot below for an example data folder in Ubuntu.</description></item><item><title>Write to database</title><link>https://ramellose.github.io/mako_docs/examples/qiita/write/</link><pubDate>Wed, 21 Apr 2021 16:31:20 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/examples/qiita/write/</guid><description>The dump file can be written both to a local Neo4j database, and to a Docker file. The former is a bit simpler, but requires you to download the exact Neo4j version used to generate the dump file,
Writing the dump file to a local Neo4j database
If you have a running local instance of Neo4j, you can simply use the command below from the neo4j folder. Make sure to adapt the --from file path to the file path where you have saved the mako.</description></item><item><title>Test</title><link>https://ramellose.github.io/mako_docs/examples/testfile1/test/</link><pubDate>Fri, 16 Apr 2021 17:56:39 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/examples/testfile1/test/</guid><description/></item></channel></rss>