<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mako info on</title><link>https://ramellose.github.io/mako_docs/neo4j/</link><description>Recent content in Mako info on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://ramellose.github.io/mako_docs/neo4j/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://ramellose.github.io/mako_docs/neo4j/introduction/intro/</link><pubDate>Tue, 20 Apr 2021 16:33:06 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/introduction/intro/</guid><description>To use mako to store biological data, it needs to be able to access a Neo4j database. There are multiple ways to run one; in this guide, several strategies for using Neo4j will be addressed, with relevant links to Neo4j sources included. Two editions of Neo4j are available: Neo4j Community and Neo4j Enterprise. Neo4j Community is open source and freely available, while Neo4j Enterprise requires a licence. Many of the advanced features available to Enterprise are not necessary for simpler biology applications, and therefore will not be discussed in this guide.</description></item><item><title>Introduction</title><link>https://ramellose.github.io/mako_docs/neo4j/local/intro/</link><pubDate>Tue, 20 Apr 2021 16:25:31 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/local/intro/</guid><description>For starting out with Neo4j, a local Neo4j database can also be helpful. You can download Neo4j from the \a href=&amp;ldquo;https://neo4j.com/download/&amp;quot;&amp;gt;Neo4j Downloads page by selecting the appropriate edition listed under Community Server. For more extensive analyses, maintaining a local Neo4j database can be helpful since the database is persistent.
To use Neo4j, you first need to follow the installation guide. The Neo4j website has extensive instructions for Linux, macOS and Windows in the Neo4j Operations Manual.</description></item><item><title>Linux</title><link>https://ramellose.github.io/mako_docs/neo4j/local/linux/</link><pubDate>Tue, 20 Apr 2021 16:25:19 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/local/linux/</guid><description>You can find all instructions for running Neo4j as a Linux service in the Linux section of the Operations Manual. To run Neo4j on Linux, you need to first install the RPM package. Instructions for installations of the RPM package can also be found in the Linux section of the Operations Manual. After installation of RPM (and possibly rebooting your system), you can follow the instructions below to start the service on Linux computers.</description></item><item><title>Setting up Docker</title><link>https://ramellose.github.io/mako_docs/neo4j/docker/docker/</link><pubDate>Tue, 20 Apr 2021 16:24:59 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/docker/docker/</guid><description>Docker is a convenient tool for virtualization. Docker containers contain a standardized environment that can be run from any desktop or via the cloud, solving many issues with compatibility across operating systems. By running software via Docker instead of directly on a desktop, it becomes possible to run different versions of dependencies side-by-side without affecting existing installations. As a result, running Neo4j via Docker can be more convenient. By default, encryption is not supported by the Neo4j container.</description></item><item><title>macOS</title><link>https://ramellose.github.io/mako_docs/neo4j/local/macosx/</link><pubDate>Tue, 20 Apr 2021 16:25:37 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/local/macosx/</guid><description>While you can run Neo4j as a console application, you can also run it as a service. However, you need to create the service manually using launchd. You can find all instructions for running Neo4j as a macOS service in the macOS section of the Operations Manual. The instructions below are to run the console application on macOS computers.
Download the macOS version of Neo4j listed under Community server
Unzip the Neo4j download in a folder of your choice
In command line, navigate to the Neo4j folder where you unzipped the download
Run .</description></item><item><title>Windows</title><link>https://ramellose.github.io/mako_docs/neo4j/local/windows/</link><pubDate>Tue, 20 Apr 2021 16:25:42 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/local/windows/</guid><description>While you can run Neo4j as a console application, you can also run it as a service. You can find all instructions for running Neo4j as a Windows service in the Windows section of the Operations Manual. The instructions below are to run the console application on Windows computers.
Download the Windows version of Neo4j listed under Community server
Unzip the Neo4j download in a folder of your choice
In command line, navigate to the Neo4j folder where you unzipped the download
Run bin\neo4j console to start the server
Run CTRL+C to stop the server</description></item><item><title>Running Neo4j on a server</title><link>https://ramellose.github.io/mako_docs/neo4j/server/server/</link><pubDate>Tue, 20 Apr 2021 16:26:16 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/server/server/</guid><description>For hosting a persistent Neo4j database that is accessible to multiple users and can be encrypted, it may be beneficial to host Neo4j on a server and configure it appropriately. Since the Community Edition only supports a single database however, this is less suitable for extensive server solutions. The Neo4j developer guides contain additional documentation on Neo4j administration for production. Guides for deploying Neo4j in the cloud can also be found in the &amp;lt;a href=&amp;ldquo;https://neo4j.</description></item><item><title>Neo4j Browser</title><link>https://ramellose.github.io/mako_docs/neo4j/browser/browser/</link><pubDate>Tue, 20 Apr 2021 16:26:06 +0200</pubDate><guid>https://ramellose.github.io/mako_docs/neo4j/browser/browser/</guid><description>Neo4j Browser is a user interface for Neo4j that can be accessed via a browser. When a Neo4j service or console application is running locally, the Neo4j Browser can be started by navigating to http://localhost:7474/ (or another port, such as http://localhost:7475/, if port settings are adjusted). Neo4j Browser provides a place to enter Cypher queries and visualize simple results. You can find more details on Neo4 Browser on the Neo4j Browser section of the developer guides.</description></item></channel></rss>