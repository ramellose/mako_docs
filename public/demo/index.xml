<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mako info on</title><link>https://ramellose.github.io/demo/</link><description>Recent content in Mako info on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://ramellose.github.io/demo/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://ramellose.github.io/demo/vignette/intro/</link><pubDate>Mon, 19 Apr 2021 11:52:57 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/intro/</guid><description>In this vignette, several of mako&amp;rsquo;s functions will briefly be introduced with an example data consisting of only 5 taxa and 20 samples. This data set is simple enough that most relevant nodes can be visualized in Neo4j Browser, making it feasible to follow along with all of mako&amp;rsquo;s operations.
The tables below give an overview of the data contained in the BIOM file. The file and associated networks can be downloaded from the mako Github repository.</description></item><item><title>Set up database</title><link>https://ramellose.github.io/demo/vignette/access/</link><pubDate>Mon, 19 Apr 2021 11:52:52 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/access/</guid><description>ðŸ‘‰
The rest of this vignette assumes that you have a running instance of Neo4j to work with.
Please check out the instructions on how to start a Neo4j database, if you do not have one available yet. There needs to be an online database for mako to access before any of the following commands will work. The software will connect to the running database and interact with this.</description></item><item><title>Uploading BIOM file</title><link>https://ramellose.github.io/demo/vignette/biom/</link><pubDate>Mon, 19 Apr 2021 11:52:26 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/biom/</guid><description>Navigate to the location where you downloaded the BIOM file. By storing the config file, we can save ourselves the hassle of typing access information each time. For -fp, fill in the file path where the downloaded BIOM file is stored.
mako neo4biom -fp local_filepath -cf -u neo4j -p test -a bolt://localhost:7688 -biom demo.biom
If you access the Neo4j Browser (http://localhost:7475/browser/) and run the following query, you should be able to access all the nodes connected to taxa:</description></item><item><title>Uploading networks</title><link>https://ramellose.github.io/demo/vignette/networks/</link><pubDate>Mon, 19 Apr 2021 11:49:52 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/networks/</guid><description>Navigate to the location where you downloaded the network files. Now, only the network files and the file path need to be provided.
mako io -fp local_filepath -cf -net demo_1.graphml demo_2.graphml
If you access the Neo4j Browser (http://localhost:7475/browser/) and run the following query, you should be able to access all the nodes connected to edges:
MATCH p=(n:Edge)&amp;ndash;() RETURN p LIMIT 50</description></item><item><title>Constructing intersection</title><link>https://ramellose.github.io/demo/vignette/intersection/</link><pubDate>Mon, 19 Apr 2021 11:49:36 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/intersection/</guid><description>The command below generates a network containing all matching edges between demo_1 and demo_2. By using the -w flag, mako is told to ignore whether edges have matching edge weights or not. The command below omits this, so edges are only considered part of an intersection if they have the same edge weight.
mako netstats -fp local_filepath -cf
If you access the Neo4j Browser (http://localhost:7475/browser/) and run the following query, you should be able to access all the edges part of sets:</description></item><item><title>Calculate metadata correlations</title><link>https://ramellose.github.io/demo/vignette/metadata/</link><pubDate>Mon, 19 Apr 2021 11:49:26 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/metadata/</guid><description>The command below carries out hypergeometric tests to see if the metadata (skin vs gut) is linked to specific taxa. Note that this is not a robust way to estimate correlations between taxa and metadata and dedicated, more appropriate statistical methods should be used for this purpose. The -var all parameter tells mako to run the tests across all variables.
mako metastats -fp local_filepath -cf -var all
If you access the Neo4j Browser (http://localhost:7475/browser/) and run the following query, you should be able to access all taxa that were linked to the skin or gut samples via the hypergeometric test:</description></item><item><title>Merge network by taxonomy</title><link>https://ramellose.github.io/demo/vignette/taxonomy/</link><pubDate>Mon, 19 Apr 2021 11:49:07 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/taxonomy/</guid><description>The command below merges networks by taxonomic level. For example, by merging to genus, both nodes assigned to Escherichia are merged into a single node, and by merging to order, the Halaerobiales nodes are merged as well. All lower taxonomic levels are also merged by running this command. Simply specify the taxonomic level after the agglom command.
mako metastats -fp local_filepath -cf -agglom order
If you access the Neo4j Browser (http://localhost:7475/browser/) and run the following query, you should be able to access two of the agglommerated networks:</description></item><item><title>Export to Cytoscape</title><link>https://ramellose.github.io/demo/vignette/cytoscape/</link><pubDate>Mon, 19 Apr 2021 11:48:54 +0200</pubDate><guid>https://ramellose.github.io/demo/vignette/cytoscape/</guid><description>Instead of working with the Neo4j database directly, it is also possible to export a specific network to a graphml file or to a running Cytoscape instance with the commands below. Specify the target network with the -net flag. The new network is exported to the specified file path in -fp. The -cyto flag is used to tell mako to export the network to Cytoscape as well.
ðŸ‘‰
To export a network to Cytoscape, make sure Cytoscape is running first!</description></item></channel></rss>